"""Add objectives table and association tables

Revision ID: ea831a4299c8
Revises: 5a912e9a8b59
Create Date: 2025-04-01 18:40:44.008031

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea831a4299c8'
down_revision: Union[str, None] = '5a912e9a8b59'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('objectives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_index(op.f('ix_objectives_id'), 'objectives', ['id'], unique=False)
    op.create_table('sequence_objective_association',
    sa.Column('sequence_id', sa.Integer(), nullable=False),
    sa.Column('objective_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['objective_id'], ['objectives.id'], ),
    sa.ForeignKeyConstraint(['sequence_id'], ['sequences.id'], ),
    sa.PrimaryKeyConstraint('sequence_id', 'objective_id')
    )
    op.create_table('session_objective_association',
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('objective_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['objective_id'], ['objectives.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('session_id', 'objective_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('session_objective_association')
    op.drop_table('sequence_objective_association')
    op.drop_index(op.f('ix_objectives_id'), table_name='objectives')
    op.drop_table('objectives')
    # ### end Alembic commands ###
